name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-unix:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    env:
     CC:   gcc-11
     CXX:  g++-11
    steps:
    - uses: actions/checkout@v3
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libfmt-dev libavcodec-dev libavformat-dev libavutil-dev

    - name: chmod
      run: chmod +x ${{github.workspace}}/cmake_install.sh

    - name: Configure CMake
      # run the cmake_install.sh script to install using cmake
      run: ${{github.workspace}}/cmake_install.sh -d ${{github.workspace}}/build -t ${{env.BUILD_TYPE}} -j 1
    
    - name: Upload-Py
      uses: actions/upload-artifact@v2
      with:
        name: package
        path: ${{github.workspace}}/build/PySynavis.cpython-310-x86_64-linux-gnu.so


